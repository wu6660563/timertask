<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

   	<context:property-placeholder location="classpath*:jdbc.properties" />
	
	<!-- 配置DataSource数据源 支持oracel与mybatis -->
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Spring提供的myBatis的SqlMap配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		 <property name="configLocation" value="classpath:mybatis-config.xml" />
		<!--
			该属性用来指定MyBatis的XML配置文件路径,跟Spring整合时，编写MyBatis映射文件的目的无非是配置一下typeAlias、setting之类的
			元素。不用在其中指定数据源，或者事务处理方式。就算配置了也会被忽略。因为这些都是使用Spring中的配置
			。当然如果你不打算添加typeAlias 之类的设置的话，你连MyBatis的配置文件都不用写，更不用配置这个属性了
		-->

		<!-- <property name="mapperLocations" value="classpath:AccountMapper.xml"/> -->
		<!-- 该配置文件用来指定Mapper映射文件的位置 ，如果映射文件与相应的接口同名，且在同一路径下，那么可以不配置该选项-->
	</bean>

	<!--
		注册Mapper方式一 	
		<bean id="userMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean"> <property
		name="mapperInterface"
		value="org.hyn.maper.UserMapper"/> <property
		name="sqlSessionFactory" ref="sqlSessionFactory"/> </bean>-->


	<!-- 注册Mapper方式二：也可不指定特定mapper，而使用自动扫描包的方式来注册各种Mapper类，配置如下：-->
	<!-- 此处的value不支持通配符.* -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 
		<property name="basePackage" value="com.latin.mapper"/>
		 -->
		 <property name="basePackage" value="com.latin"/>
	</bean>
	
	<!-- 配置事物 -->
    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="myDataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>
